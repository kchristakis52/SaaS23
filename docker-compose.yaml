version: "3.8"
services:
  messaging:
    build: ./messaging
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3
    ports:
      - "5672:5672"
      - "15672:15672"
    env_file:
      - ./env/rabbitmq.env
    environment:
      - RABBITMQ_MANAGEMENT_ENABLED=true
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
      - QUEUE_NAME=my_queue
      - EXCHANGE_NAME=wtf
      - ROUTING_KEY=routing_key
    volumes:
      - shared-volume:/app/data
  setup:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - RABBITMQ_ENV_FILE=./env/rabbitmq.env
    depends_on:
      messaging:
        condition: service_healthy
    command: >
      sh -c "sleep 9 && node setup.js"
  mysql:
    image: mysql
    restart: always
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: SaaSDB
    volumes:
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
  gateway:
    build:
      context: ./gateway
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    volumes:
      - mydata:/shared-data  
    depends_on:
      messaging:
        condition: service_healthy
  exporterline:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - mydata:/shared-data  
    depends_on:
      messaging:
        condition: service_healthy
    command: sh -c "sleep 18 && npm start"
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "4007:3000"
    volumes:
      - ./frontend/src:/app/src
    stdin_open: true
    tty: true
    depends_on:
      - gateway
  exporterpie:
    build:
      context: ./exporterpie
      dockerfile: Dockerfile
    volumes:
      - mydata:/shared-data  
    depends_on:
      messaging:
        condition: service_healthy
    command: sh -c "sleep 18 && npm start"
  exporterradar:
    build:
      context: ./exporterradar
      dockerfile: Dockerfile
    volumes:
      - mydata:/shared-data  
    depends_on:
      messaging:
        condition: service_healthy
    command: sh -c "sleep 18 && npm start"
  exportercolumn:
    build:
      context: ./exportercolumn
      dockerfile: Dockerfile
    volumes:
      - mydata:/shared-data  
    depends_on:
      messaging:
        condition: service_healthy
    command: sh -c "sleep 18 && npm start"
  exporterdependencywheel:
    build:
      context: ./exporterdependencywheel
      dockerfile: Dockerfile
    volumes:
      - mydata:/shared-data
    depends_on:
      messaging:
        condition: service_healthy
    command: sh -c "sleep 18 && npm start"
  exporterwordcloud:
    build:
      context: ./exporterwordcloud
      dockerfile: Dockerfile
    volumes:
      - mydata:/shared-data  
    depends_on:
      messaging:
        condition: service_healthy
    command: sh -c "sleep 18 && npm start"

volumes:
  mydata:
